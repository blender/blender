/*
 * Copyright 2011-2013 Blender Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "stdosl.h"

shader node_subsurface_scattering(
	color Color = 0.8,
	float Scale = 1.0,
	vector Radius = vector(0.1, 0.1, 0.1),
	float TextureBlur = 0.0,
	float Sharpness = 0.0,
	string falloff = "cubic",
	normal Normal = N,
	output closure color BSSRDF = 0)
{
	if (falloff == "gaussian")
		BSSRDF = Color * bssrdf_gaussian(Normal, Scale * Radius, TextureBlur);
	else if (falloff == "cubic")
		BSSRDF = Color * bssrdf_cubic(Normal, Scale * Radius, TextureBlur, Sharpness);
	else
		BSSRDF = Color * bssrdf_burley(Normal, Scale * Radius, TextureBlur, Color);
}

