/*
 * Copyright 2011-2013 Blender Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "stdosl.h"

shader node_convert_from_vector(
	vector value_vector = vector(0.0, 0.0, 0.0),
	output string value_string = "",
	output float value_float = 0.0,
	output int value_int = 0,
	output color value_color = color(0.0, 0.0, 0.0),
	output point value_point = point(0.0, 0.0, 0.0),
	output normal value_normal = normal(0.0, 0.0, 0.0))
{
	value_float = (value_vector[0] + value_vector[1] + value_vector[2]) * (1.0 / 3.0);
	value_int = (int)((value_normal[0] + value_normal[1] + value_normal[2]) * (1.0 / 3.0));
	value_color = color(value_vector[0], value_vector[1], value_vector[2]);
	value_point = point(value_vector[0], value_vector[1], value_vector[2]);
	value_normal = normal(value_vector[0], value_vector[1], value_vector[2]);
}

